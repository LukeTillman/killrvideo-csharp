// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: video-catalog/video_catalog_events.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace KillrVideo.VideoCatalog.Events {

  /// <summary>Holder for reflection information generated from video-catalog/video_catalog_events.proto</summary>
  public static partial class VideoCatalogEventsReflection {

    #region Descriptor
    /// <summary>File descriptor for video-catalog/video_catalog_events.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static VideoCatalogEventsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cih2aWRlby1jYXRhbG9nL3ZpZGVvX2NhdGFsb2dfZXZlbnRzLnByb3RvEh9r",
            "aWxscnZpZGVvLnZpZGVvX2NhdGFsb2cuZXZlbnRzGh9nb29nbGUvcHJvdG9i",
            "dWYvdGltZXN0YW1wLnByb3RvGhljb21tb24vY29tbW9uX3R5cGVzLnByb3Rv",
            "IoUBChVVcGxvYWRlZFZpZGVvQWNjZXB0ZWQSKQoIdmlkZW9faWQYASABKAsy",
            "Fy5raWxscnZpZGVvLmNvbW1vbi5VdWlkEhIKCnVwbG9hZF91cmwYAiABKAkS",
            "LQoJdGltZXN0YW1wGAMgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFt",
            "cCKrAgoSVXBsb2FkZWRWaWRlb0FkZGVkEikKCHZpZGVvX2lkGAEgASgLMhcu",
            "a2lsbHJ2aWRlby5jb21tb24uVXVpZBIoCgd1c2VyX2lkGAIgASgLMhcua2ls",
            "bHJ2aWRlby5jb21tb24uVXVpZBIMCgRuYW1lGAMgASgJEhMKC2Rlc2NyaXB0",
            "aW9uGAQgASgJEhAKCGxvY2F0aW9uGAUgASgJEh4KFnByZXZpZXdfaW1hZ2Vf",
            "bG9jYXRpb24YBiABKAkSDAoEdGFncxgHIAMoCRIuCgphZGRlZF9kYXRlGAgg",
            "ASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBItCgl0aW1lc3RhbXAY",
            "CSABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wIqoCChFZb3VUdWJl",
            "VmlkZW9BZGRlZBIpCgh2aWRlb19pZBgBIAEoCzIXLmtpbGxydmlkZW8uY29t",
            "bW9uLlV1aWQSKAoHdXNlcl9pZBgCIAEoCzIXLmtpbGxydmlkZW8uY29tbW9u",
            "LlV1aWQSDAoEbmFtZRgDIAEoCRITCgtkZXNjcmlwdGlvbhgEIAEoCRIQCghs",
            "b2NhdGlvbhgFIAEoCRIeChZwcmV2aWV3X2ltYWdlX2xvY2F0aW9uGAYgASgJ",
            "EgwKBHRhZ3MYByADKAkSLgoKYWRkZWRfZGF0ZRgIIAEoCzIaLmdvb2dsZS5w",
            "cm90b2J1Zi5UaW1lc3RhbXASLQoJdGltZXN0YW1wGAkgASgLMhouZ29vZ2xl",
            "LnByb3RvYnVmLlRpbWVzdGFtcEIhqgIeS2lsbHJWaWRlby5WaWRlb0NhdGFs",
            "b2cuRXZlbnRzYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::KillrVideo.Protobuf.CommonTypesReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::KillrVideo.VideoCatalog.Events.UploadedVideoAccepted), global::KillrVideo.VideoCatalog.Events.UploadedVideoAccepted.Parser, new[]{ "VideoId", "UploadUrl", "Timestamp" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::KillrVideo.VideoCatalog.Events.UploadedVideoAdded), global::KillrVideo.VideoCatalog.Events.UploadedVideoAdded.Parser, new[]{ "VideoId", "UserId", "Name", "Description", "Location", "PreviewImageLocation", "Tags", "AddedDate", "Timestamp" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::KillrVideo.VideoCatalog.Events.YouTubeVideoAdded), global::KillrVideo.VideoCatalog.Events.YouTubeVideoAdded.Parser, new[]{ "VideoId", "UserId", "Name", "Description", "Location", "PreviewImageLocation", "Tags", "AddedDate", "Timestamp" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///  Event published when uploaded video has been accepted by the catalog, but isn't ready for playback yet
  /// </summary>
  public sealed partial class UploadedVideoAccepted : pb::IMessage<UploadedVideoAccepted> {
    private static readonly pb::MessageParser<UploadedVideoAccepted> _parser = new pb::MessageParser<UploadedVideoAccepted>(() => new UploadedVideoAccepted());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UploadedVideoAccepted> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::KillrVideo.VideoCatalog.Events.VideoCatalogEventsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UploadedVideoAccepted() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UploadedVideoAccepted(UploadedVideoAccepted other) : this() {
      VideoId = other.videoId_ != null ? other.VideoId.Clone() : null;
      uploadUrl_ = other.uploadUrl_;
      Timestamp = other.timestamp_ != null ? other.Timestamp.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UploadedVideoAccepted Clone() {
      return new UploadedVideoAccepted(this);
    }

    /// <summary>Field number for the "video_id" field.</summary>
    public const int VideoIdFieldNumber = 1;
    private global::KillrVideo.Protobuf.Uuid videoId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::KillrVideo.Protobuf.Uuid VideoId {
      get { return videoId_; }
      set {
        videoId_ = value;
      }
    }

    /// <summary>Field number for the "upload_url" field.</summary>
    public const int UploadUrlFieldNumber = 2;
    private string uploadUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UploadUrl {
      get { return uploadUrl_; }
      set {
        uploadUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Timestamp timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UploadedVideoAccepted);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UploadedVideoAccepted other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(VideoId, other.VideoId)) return false;
      if (UploadUrl != other.UploadUrl) return false;
      if (!object.Equals(Timestamp, other.Timestamp)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (videoId_ != null) hash ^= VideoId.GetHashCode();
      if (UploadUrl.Length != 0) hash ^= UploadUrl.GetHashCode();
      if (timestamp_ != null) hash ^= Timestamp.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (videoId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(VideoId);
      }
      if (UploadUrl.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UploadUrl);
      }
      if (timestamp_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Timestamp);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (videoId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VideoId);
      }
      if (UploadUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UploadUrl);
      }
      if (timestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Timestamp);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UploadedVideoAccepted other) {
      if (other == null) {
        return;
      }
      if (other.videoId_ != null) {
        if (videoId_ == null) {
          videoId_ = new global::KillrVideo.Protobuf.Uuid();
        }
        VideoId.MergeFrom(other.VideoId);
      }
      if (other.UploadUrl.Length != 0) {
        UploadUrl = other.UploadUrl;
      }
      if (other.timestamp_ != null) {
        if (timestamp_ == null) {
          timestamp_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Timestamp.MergeFrom(other.Timestamp);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (videoId_ == null) {
              videoId_ = new global::KillrVideo.Protobuf.Uuid();
            }
            input.ReadMessage(videoId_);
            break;
          }
          case 18: {
            UploadUrl = input.ReadString();
            break;
          }
          case 26: {
            if (timestamp_ == null) {
              timestamp_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(timestamp_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///  Event published when an uploaded video has been added to the catalog and is ready for playback
  /// </summary>
  public sealed partial class UploadedVideoAdded : pb::IMessage<UploadedVideoAdded> {
    private static readonly pb::MessageParser<UploadedVideoAdded> _parser = new pb::MessageParser<UploadedVideoAdded>(() => new UploadedVideoAdded());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UploadedVideoAdded> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::KillrVideo.VideoCatalog.Events.VideoCatalogEventsReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UploadedVideoAdded() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UploadedVideoAdded(UploadedVideoAdded other) : this() {
      VideoId = other.videoId_ != null ? other.VideoId.Clone() : null;
      UserId = other.userId_ != null ? other.UserId.Clone() : null;
      name_ = other.name_;
      description_ = other.description_;
      location_ = other.location_;
      previewImageLocation_ = other.previewImageLocation_;
      tags_ = other.tags_.Clone();
      AddedDate = other.addedDate_ != null ? other.AddedDate.Clone() : null;
      Timestamp = other.timestamp_ != null ? other.Timestamp.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UploadedVideoAdded Clone() {
      return new UploadedVideoAdded(this);
    }

    /// <summary>Field number for the "video_id" field.</summary>
    public const int VideoIdFieldNumber = 1;
    private global::KillrVideo.Protobuf.Uuid videoId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::KillrVideo.Protobuf.Uuid VideoId {
      get { return videoId_; }
      set {
        videoId_ = value;
      }
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 2;
    private global::KillrVideo.Protobuf.Uuid userId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::KillrVideo.Protobuf.Uuid UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 3;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 4;
    private string description_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "location" field.</summary>
    public const int LocationFieldNumber = 5;
    private string location_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Location {
      get { return location_; }
      set {
        location_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "preview_image_location" field.</summary>
    public const int PreviewImageLocationFieldNumber = 6;
    private string previewImageLocation_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PreviewImageLocation {
      get { return previewImageLocation_; }
      set {
        previewImageLocation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "tags" field.</summary>
    public const int TagsFieldNumber = 7;
    private static readonly pb::FieldCodec<string> _repeated_tags_codec
        = pb::FieldCodec.ForString(58);
    private readonly pbc::RepeatedField<string> tags_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Tags {
      get { return tags_; }
    }

    /// <summary>Field number for the "added_date" field.</summary>
    public const int AddedDateFieldNumber = 8;
    private global::Google.Protobuf.WellKnownTypes.Timestamp addedDate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp AddedDate {
      get { return addedDate_; }
      set {
        addedDate_ = value;
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 9;
    private global::Google.Protobuf.WellKnownTypes.Timestamp timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UploadedVideoAdded);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UploadedVideoAdded other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(VideoId, other.VideoId)) return false;
      if (!object.Equals(UserId, other.UserId)) return false;
      if (Name != other.Name) return false;
      if (Description != other.Description) return false;
      if (Location != other.Location) return false;
      if (PreviewImageLocation != other.PreviewImageLocation) return false;
      if(!tags_.Equals(other.tags_)) return false;
      if (!object.Equals(AddedDate, other.AddedDate)) return false;
      if (!object.Equals(Timestamp, other.Timestamp)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (videoId_ != null) hash ^= VideoId.GetHashCode();
      if (userId_ != null) hash ^= UserId.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (Location.Length != 0) hash ^= Location.GetHashCode();
      if (PreviewImageLocation.Length != 0) hash ^= PreviewImageLocation.GetHashCode();
      hash ^= tags_.GetHashCode();
      if (addedDate_ != null) hash ^= AddedDate.GetHashCode();
      if (timestamp_ != null) hash ^= Timestamp.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (videoId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(VideoId);
      }
      if (userId_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(UserId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Description);
      }
      if (Location.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Location);
      }
      if (PreviewImageLocation.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(PreviewImageLocation);
      }
      tags_.WriteTo(output, _repeated_tags_codec);
      if (addedDate_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(AddedDate);
      }
      if (timestamp_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(Timestamp);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (videoId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VideoId);
      }
      if (userId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserId);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (Location.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Location);
      }
      if (PreviewImageLocation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PreviewImageLocation);
      }
      size += tags_.CalculateSize(_repeated_tags_codec);
      if (addedDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AddedDate);
      }
      if (timestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Timestamp);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UploadedVideoAdded other) {
      if (other == null) {
        return;
      }
      if (other.videoId_ != null) {
        if (videoId_ == null) {
          videoId_ = new global::KillrVideo.Protobuf.Uuid();
        }
        VideoId.MergeFrom(other.VideoId);
      }
      if (other.userId_ != null) {
        if (userId_ == null) {
          userId_ = new global::KillrVideo.Protobuf.Uuid();
        }
        UserId.MergeFrom(other.UserId);
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.Location.Length != 0) {
        Location = other.Location;
      }
      if (other.PreviewImageLocation.Length != 0) {
        PreviewImageLocation = other.PreviewImageLocation;
      }
      tags_.Add(other.tags_);
      if (other.addedDate_ != null) {
        if (addedDate_ == null) {
          addedDate_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        AddedDate.MergeFrom(other.AddedDate);
      }
      if (other.timestamp_ != null) {
        if (timestamp_ == null) {
          timestamp_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Timestamp.MergeFrom(other.Timestamp);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (videoId_ == null) {
              videoId_ = new global::KillrVideo.Protobuf.Uuid();
            }
            input.ReadMessage(videoId_);
            break;
          }
          case 18: {
            if (userId_ == null) {
              userId_ = new global::KillrVideo.Protobuf.Uuid();
            }
            input.ReadMessage(userId_);
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 34: {
            Description = input.ReadString();
            break;
          }
          case 42: {
            Location = input.ReadString();
            break;
          }
          case 50: {
            PreviewImageLocation = input.ReadString();
            break;
          }
          case 58: {
            tags_.AddEntriesFrom(input, _repeated_tags_codec);
            break;
          }
          case 66: {
            if (addedDate_ == null) {
              addedDate_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(addedDate_);
            break;
          }
          case 74: {
            if (timestamp_ == null) {
              timestamp_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(timestamp_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///  Event published when a YouTube video has been added to the catalog and is ready for playback
  /// </summary>
  public sealed partial class YouTubeVideoAdded : pb::IMessage<YouTubeVideoAdded> {
    private static readonly pb::MessageParser<YouTubeVideoAdded> _parser = new pb::MessageParser<YouTubeVideoAdded>(() => new YouTubeVideoAdded());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<YouTubeVideoAdded> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::KillrVideo.VideoCatalog.Events.VideoCatalogEventsReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public YouTubeVideoAdded() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public YouTubeVideoAdded(YouTubeVideoAdded other) : this() {
      VideoId = other.videoId_ != null ? other.VideoId.Clone() : null;
      UserId = other.userId_ != null ? other.UserId.Clone() : null;
      name_ = other.name_;
      description_ = other.description_;
      location_ = other.location_;
      previewImageLocation_ = other.previewImageLocation_;
      tags_ = other.tags_.Clone();
      AddedDate = other.addedDate_ != null ? other.AddedDate.Clone() : null;
      Timestamp = other.timestamp_ != null ? other.Timestamp.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public YouTubeVideoAdded Clone() {
      return new YouTubeVideoAdded(this);
    }

    /// <summary>Field number for the "video_id" field.</summary>
    public const int VideoIdFieldNumber = 1;
    private global::KillrVideo.Protobuf.Uuid videoId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::KillrVideo.Protobuf.Uuid VideoId {
      get { return videoId_; }
      set {
        videoId_ = value;
      }
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 2;
    private global::KillrVideo.Protobuf.Uuid userId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::KillrVideo.Protobuf.Uuid UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 3;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 4;
    private string description_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "location" field.</summary>
    public const int LocationFieldNumber = 5;
    private string location_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Location {
      get { return location_; }
      set {
        location_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "preview_image_location" field.</summary>
    public const int PreviewImageLocationFieldNumber = 6;
    private string previewImageLocation_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PreviewImageLocation {
      get { return previewImageLocation_; }
      set {
        previewImageLocation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "tags" field.</summary>
    public const int TagsFieldNumber = 7;
    private static readonly pb::FieldCodec<string> _repeated_tags_codec
        = pb::FieldCodec.ForString(58);
    private readonly pbc::RepeatedField<string> tags_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Tags {
      get { return tags_; }
    }

    /// <summary>Field number for the "added_date" field.</summary>
    public const int AddedDateFieldNumber = 8;
    private global::Google.Protobuf.WellKnownTypes.Timestamp addedDate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp AddedDate {
      get { return addedDate_; }
      set {
        addedDate_ = value;
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 9;
    private global::Google.Protobuf.WellKnownTypes.Timestamp timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as YouTubeVideoAdded);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(YouTubeVideoAdded other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(VideoId, other.VideoId)) return false;
      if (!object.Equals(UserId, other.UserId)) return false;
      if (Name != other.Name) return false;
      if (Description != other.Description) return false;
      if (Location != other.Location) return false;
      if (PreviewImageLocation != other.PreviewImageLocation) return false;
      if(!tags_.Equals(other.tags_)) return false;
      if (!object.Equals(AddedDate, other.AddedDate)) return false;
      if (!object.Equals(Timestamp, other.Timestamp)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (videoId_ != null) hash ^= VideoId.GetHashCode();
      if (userId_ != null) hash ^= UserId.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (Location.Length != 0) hash ^= Location.GetHashCode();
      if (PreviewImageLocation.Length != 0) hash ^= PreviewImageLocation.GetHashCode();
      hash ^= tags_.GetHashCode();
      if (addedDate_ != null) hash ^= AddedDate.GetHashCode();
      if (timestamp_ != null) hash ^= Timestamp.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (videoId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(VideoId);
      }
      if (userId_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(UserId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Description);
      }
      if (Location.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Location);
      }
      if (PreviewImageLocation.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(PreviewImageLocation);
      }
      tags_.WriteTo(output, _repeated_tags_codec);
      if (addedDate_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(AddedDate);
      }
      if (timestamp_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(Timestamp);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (videoId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VideoId);
      }
      if (userId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserId);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (Location.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Location);
      }
      if (PreviewImageLocation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PreviewImageLocation);
      }
      size += tags_.CalculateSize(_repeated_tags_codec);
      if (addedDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AddedDate);
      }
      if (timestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Timestamp);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(YouTubeVideoAdded other) {
      if (other == null) {
        return;
      }
      if (other.videoId_ != null) {
        if (videoId_ == null) {
          videoId_ = new global::KillrVideo.Protobuf.Uuid();
        }
        VideoId.MergeFrom(other.VideoId);
      }
      if (other.userId_ != null) {
        if (userId_ == null) {
          userId_ = new global::KillrVideo.Protobuf.Uuid();
        }
        UserId.MergeFrom(other.UserId);
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.Location.Length != 0) {
        Location = other.Location;
      }
      if (other.PreviewImageLocation.Length != 0) {
        PreviewImageLocation = other.PreviewImageLocation;
      }
      tags_.Add(other.tags_);
      if (other.addedDate_ != null) {
        if (addedDate_ == null) {
          addedDate_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        AddedDate.MergeFrom(other.AddedDate);
      }
      if (other.timestamp_ != null) {
        if (timestamp_ == null) {
          timestamp_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Timestamp.MergeFrom(other.Timestamp);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (videoId_ == null) {
              videoId_ = new global::KillrVideo.Protobuf.Uuid();
            }
            input.ReadMessage(videoId_);
            break;
          }
          case 18: {
            if (userId_ == null) {
              userId_ = new global::KillrVideo.Protobuf.Uuid();
            }
            input.ReadMessage(userId_);
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 34: {
            Description = input.ReadString();
            break;
          }
          case 42: {
            Location = input.ReadString();
            break;
          }
          case 50: {
            PreviewImageLocation = input.ReadString();
            break;
          }
          case 58: {
            tags_.AddEntriesFrom(input, _repeated_tags_codec);
            break;
          }
          case 66: {
            if (addedDate_ == null) {
              addedDate_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(addedDate_);
            break;
          }
          case 74: {
            if (timestamp_ == null) {
              timestamp_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(timestamp_);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
