// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: uploads/uploads_events.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace KillrVideo.Uploads.Events {

  /// <summary>Holder for reflection information generated from uploads/uploads_events.proto</summary>
  public static partial class UploadsEventsReflection {

    #region Descriptor
    /// <summary>File descriptor for uploads/uploads_events.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static UploadsEventsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Chx1cGxvYWRzL3VwbG9hZHNfZXZlbnRzLnByb3RvEhlraWxscnZpZGVvLnVw",
            "bG9hZHMuZXZlbnRzGh9nb29nbGUvcHJvdG9idWYvdGltZXN0YW1wLnByb3Rv",
            "Ghljb21tb24vY29tbW9uX3R5cGVzLnByb3RvInkKHVVwbG9hZGVkVmlkZW9Q",
            "cm9jZXNzaW5nRmFpbGVkEikKCHZpZGVvX2lkGAEgASgLMhcua2lsbHJ2aWRl",
            "by5jb21tb24uVXVpZBItCgl0aW1lc3RhbXAYAiABKAsyGi5nb29nbGUucHJv",
            "dG9idWYuVGltZXN0YW1wInoKHlVwbG9hZGVkVmlkZW9Qcm9jZXNzaW5nU3Rh",
            "cnRlZBIpCgh2aWRlb19pZBgBIAEoCzIXLmtpbGxydmlkZW8uY29tbW9uLlV1",
            "aWQSLQoJdGltZXN0YW1wGAIgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVz",
            "dGFtcCJ8CiBVcGxvYWRlZFZpZGVvUHJvY2Vzc2luZ1N1Y2NlZWRlZBIpCgh2",
            "aWRlb19pZBgBIAEoCzIXLmtpbGxydmlkZW8uY29tbW9uLlV1aWQSLQoJdGlt",
            "ZXN0YW1wGAIgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcCKcAQoW",
            "VXBsb2FkZWRWaWRlb1B1Ymxpc2hlZBIpCgh2aWRlb19pZBgBIAEoCzIXLmtp",
            "bGxydmlkZW8uY29tbW9uLlV1aWQSLQoJdGltZXN0YW1wGAIgASgLMhouZ29v",
            "Z2xlLnByb3RvYnVmLlRpbWVzdGFtcBIRCgl2aWRlb191cmwYAyABKAkSFQoN",
            "dGh1bWJuYWlsX3VybBgEIAEoCUIcqgIZS2lsbHJWaWRlby5VcGxvYWRzLkV2",
            "ZW50c2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::KillrVideo.Protobuf.CommonTypesReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::KillrVideo.Uploads.Events.UploadedVideoProcessingFailed), global::KillrVideo.Uploads.Events.UploadedVideoProcessingFailed.Parser, new[]{ "VideoId", "Timestamp" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::KillrVideo.Uploads.Events.UploadedVideoProcessingStarted), global::KillrVideo.Uploads.Events.UploadedVideoProcessingStarted.Parser, new[]{ "VideoId", "Timestamp" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::KillrVideo.Uploads.Events.UploadedVideoProcessingSucceeded), global::KillrVideo.Uploads.Events.UploadedVideoProcessingSucceeded.Parser, new[]{ "VideoId", "Timestamp" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::KillrVideo.Uploads.Events.UploadedVideoPublished), global::KillrVideo.Uploads.Events.UploadedVideoPublished.Parser, new[]{ "VideoId", "Timestamp", "VideoUrl", "ThumbnailUrl" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///  Event that's published when there's a problem processing an uploaded video
  /// </summary>
  public sealed partial class UploadedVideoProcessingFailed : pb::IMessage<UploadedVideoProcessingFailed> {
    private static readonly pb::MessageParser<UploadedVideoProcessingFailed> _parser = new pb::MessageParser<UploadedVideoProcessingFailed>(() => new UploadedVideoProcessingFailed());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UploadedVideoProcessingFailed> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::KillrVideo.Uploads.Events.UploadsEventsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UploadedVideoProcessingFailed() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UploadedVideoProcessingFailed(UploadedVideoProcessingFailed other) : this() {
      VideoId = other.videoId_ != null ? other.VideoId.Clone() : null;
      Timestamp = other.timestamp_ != null ? other.Timestamp.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UploadedVideoProcessingFailed Clone() {
      return new UploadedVideoProcessingFailed(this);
    }

    /// <summary>Field number for the "video_id" field.</summary>
    public const int VideoIdFieldNumber = 1;
    private global::KillrVideo.Protobuf.Uuid videoId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::KillrVideo.Protobuf.Uuid VideoId {
      get { return videoId_; }
      set {
        videoId_ = value;
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UploadedVideoProcessingFailed);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UploadedVideoProcessingFailed other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(VideoId, other.VideoId)) return false;
      if (!object.Equals(Timestamp, other.Timestamp)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (videoId_ != null) hash ^= VideoId.GetHashCode();
      if (timestamp_ != null) hash ^= Timestamp.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (videoId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(VideoId);
      }
      if (timestamp_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Timestamp);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (videoId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VideoId);
      }
      if (timestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Timestamp);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UploadedVideoProcessingFailed other) {
      if (other == null) {
        return;
      }
      if (other.videoId_ != null) {
        if (videoId_ == null) {
          videoId_ = new global::KillrVideo.Protobuf.Uuid();
        }
        VideoId.MergeFrom(other.VideoId);
      }
      if (other.timestamp_ != null) {
        if (timestamp_ == null) {
          timestamp_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Timestamp.MergeFrom(other.Timestamp);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (videoId_ == null) {
              videoId_ = new global::KillrVideo.Protobuf.Uuid();
            }
            input.ReadMessage(videoId_);
            break;
          }
          case 18: {
            if (timestamp_ == null) {
              timestamp_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(timestamp_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///  Event that's published when an uploaded video has started being processed
  /// </summary>
  public sealed partial class UploadedVideoProcessingStarted : pb::IMessage<UploadedVideoProcessingStarted> {
    private static readonly pb::MessageParser<UploadedVideoProcessingStarted> _parser = new pb::MessageParser<UploadedVideoProcessingStarted>(() => new UploadedVideoProcessingStarted());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UploadedVideoProcessingStarted> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::KillrVideo.Uploads.Events.UploadsEventsReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UploadedVideoProcessingStarted() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UploadedVideoProcessingStarted(UploadedVideoProcessingStarted other) : this() {
      VideoId = other.videoId_ != null ? other.VideoId.Clone() : null;
      Timestamp = other.timestamp_ != null ? other.Timestamp.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UploadedVideoProcessingStarted Clone() {
      return new UploadedVideoProcessingStarted(this);
    }

    /// <summary>Field number for the "video_id" field.</summary>
    public const int VideoIdFieldNumber = 1;
    private global::KillrVideo.Protobuf.Uuid videoId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::KillrVideo.Protobuf.Uuid VideoId {
      get { return videoId_; }
      set {
        videoId_ = value;
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UploadedVideoProcessingStarted);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UploadedVideoProcessingStarted other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(VideoId, other.VideoId)) return false;
      if (!object.Equals(Timestamp, other.Timestamp)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (videoId_ != null) hash ^= VideoId.GetHashCode();
      if (timestamp_ != null) hash ^= Timestamp.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (videoId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(VideoId);
      }
      if (timestamp_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Timestamp);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (videoId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VideoId);
      }
      if (timestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Timestamp);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UploadedVideoProcessingStarted other) {
      if (other == null) {
        return;
      }
      if (other.videoId_ != null) {
        if (videoId_ == null) {
          videoId_ = new global::KillrVideo.Protobuf.Uuid();
        }
        VideoId.MergeFrom(other.VideoId);
      }
      if (other.timestamp_ != null) {
        if (timestamp_ == null) {
          timestamp_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Timestamp.MergeFrom(other.Timestamp);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (videoId_ == null) {
              videoId_ = new global::KillrVideo.Protobuf.Uuid();
            }
            input.ReadMessage(videoId_);
            break;
          }
          case 18: {
            if (timestamp_ == null) {
              timestamp_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(timestamp_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///  Event that's published when an uploaded video has been successfully processed
  /// </summary>
  public sealed partial class UploadedVideoProcessingSucceeded : pb::IMessage<UploadedVideoProcessingSucceeded> {
    private static readonly pb::MessageParser<UploadedVideoProcessingSucceeded> _parser = new pb::MessageParser<UploadedVideoProcessingSucceeded>(() => new UploadedVideoProcessingSucceeded());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UploadedVideoProcessingSucceeded> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::KillrVideo.Uploads.Events.UploadsEventsReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UploadedVideoProcessingSucceeded() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UploadedVideoProcessingSucceeded(UploadedVideoProcessingSucceeded other) : this() {
      VideoId = other.videoId_ != null ? other.VideoId.Clone() : null;
      Timestamp = other.timestamp_ != null ? other.Timestamp.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UploadedVideoProcessingSucceeded Clone() {
      return new UploadedVideoProcessingSucceeded(this);
    }

    /// <summary>Field number for the "video_id" field.</summary>
    public const int VideoIdFieldNumber = 1;
    private global::KillrVideo.Protobuf.Uuid videoId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::KillrVideo.Protobuf.Uuid VideoId {
      get { return videoId_; }
      set {
        videoId_ = value;
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UploadedVideoProcessingSucceeded);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UploadedVideoProcessingSucceeded other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(VideoId, other.VideoId)) return false;
      if (!object.Equals(Timestamp, other.Timestamp)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (videoId_ != null) hash ^= VideoId.GetHashCode();
      if (timestamp_ != null) hash ^= Timestamp.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (videoId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(VideoId);
      }
      if (timestamp_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Timestamp);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (videoId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VideoId);
      }
      if (timestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Timestamp);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UploadedVideoProcessingSucceeded other) {
      if (other == null) {
        return;
      }
      if (other.videoId_ != null) {
        if (videoId_ == null) {
          videoId_ = new global::KillrVideo.Protobuf.Uuid();
        }
        VideoId.MergeFrom(other.VideoId);
      }
      if (other.timestamp_ != null) {
        if (timestamp_ == null) {
          timestamp_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Timestamp.MergeFrom(other.Timestamp);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (videoId_ == null) {
              videoId_ = new global::KillrVideo.Protobuf.Uuid();
            }
            input.ReadMessage(videoId_);
            break;
          }
          case 18: {
            if (timestamp_ == null) {
              timestamp_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(timestamp_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///  Event that's published when an uploaded video is available and ready for playback
  /// </summary>
  public sealed partial class UploadedVideoPublished : pb::IMessage<UploadedVideoPublished> {
    private static readonly pb::MessageParser<UploadedVideoPublished> _parser = new pb::MessageParser<UploadedVideoPublished>(() => new UploadedVideoPublished());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UploadedVideoPublished> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::KillrVideo.Uploads.Events.UploadsEventsReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UploadedVideoPublished() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UploadedVideoPublished(UploadedVideoPublished other) : this() {
      VideoId = other.videoId_ != null ? other.VideoId.Clone() : null;
      Timestamp = other.timestamp_ != null ? other.Timestamp.Clone() : null;
      videoUrl_ = other.videoUrl_;
      thumbnailUrl_ = other.thumbnailUrl_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UploadedVideoPublished Clone() {
      return new UploadedVideoPublished(this);
    }

    /// <summary>Field number for the "video_id" field.</summary>
    public const int VideoIdFieldNumber = 1;
    private global::KillrVideo.Protobuf.Uuid videoId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::KillrVideo.Protobuf.Uuid VideoId {
      get { return videoId_; }
      set {
        videoId_ = value;
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    /// <summary>Field number for the "video_url" field.</summary>
    public const int VideoUrlFieldNumber = 3;
    private string videoUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string VideoUrl {
      get { return videoUrl_; }
      set {
        videoUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "thumbnail_url" field.</summary>
    public const int ThumbnailUrlFieldNumber = 4;
    private string thumbnailUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ThumbnailUrl {
      get { return thumbnailUrl_; }
      set {
        thumbnailUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UploadedVideoPublished);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UploadedVideoPublished other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(VideoId, other.VideoId)) return false;
      if (!object.Equals(Timestamp, other.Timestamp)) return false;
      if (VideoUrl != other.VideoUrl) return false;
      if (ThumbnailUrl != other.ThumbnailUrl) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (videoId_ != null) hash ^= VideoId.GetHashCode();
      if (timestamp_ != null) hash ^= Timestamp.GetHashCode();
      if (VideoUrl.Length != 0) hash ^= VideoUrl.GetHashCode();
      if (ThumbnailUrl.Length != 0) hash ^= ThumbnailUrl.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (videoId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(VideoId);
      }
      if (timestamp_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Timestamp);
      }
      if (VideoUrl.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(VideoUrl);
      }
      if (ThumbnailUrl.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ThumbnailUrl);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (videoId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VideoId);
      }
      if (timestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Timestamp);
      }
      if (VideoUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VideoUrl);
      }
      if (ThumbnailUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ThumbnailUrl);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UploadedVideoPublished other) {
      if (other == null) {
        return;
      }
      if (other.videoId_ != null) {
        if (videoId_ == null) {
          videoId_ = new global::KillrVideo.Protobuf.Uuid();
        }
        VideoId.MergeFrom(other.VideoId);
      }
      if (other.timestamp_ != null) {
        if (timestamp_ == null) {
          timestamp_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Timestamp.MergeFrom(other.Timestamp);
      }
      if (other.VideoUrl.Length != 0) {
        VideoUrl = other.VideoUrl;
      }
      if (other.ThumbnailUrl.Length != 0) {
        ThumbnailUrl = other.ThumbnailUrl;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (videoId_ == null) {
              videoId_ = new global::KillrVideo.Protobuf.Uuid();
            }
            input.ReadMessage(videoId_);
            break;
          }
          case 18: {
            if (timestamp_ == null) {
              timestamp_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(timestamp_);
            break;
          }
          case 26: {
            VideoUrl = input.ReadString();
            break;
          }
          case 34: {
            ThumbnailUrl = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
